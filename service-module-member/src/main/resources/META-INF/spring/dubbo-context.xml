<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://code.alibabatech.com/schema/dubbo  
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="service-module-member" logger="slf4j" owner="${dubbo.owner}" />
	<!-- 使用multicast广播注册中心暴露服务地址 -->
	<!-- <dubbo:registry address="multicast://224.5.6.7:1234" /> -->
	<!-- 使用zookeeper注册中心暴露服务地址 -->
	<dubbo:registry address="${dubbo.registry.zookeeper.address}" />
	<!--通过注册中心获取monitor地址后建立连接-->
	<dubbo:monitor protocol="registry" />
	<!--
	   dubbo:registry 标签一些属性的说明：
	      1）register是否向此注册中心注册服务，如果设为false，将只订阅，不注册。
	      2）check注册中心不存在时，是否报错。
	      3）subscribe是否向此注册中心订阅服务，如果设为false，将只注册，不订阅。
	      4）timeout注册中心请求超时时间(毫秒),默认500。
	      5）address可以Zookeeper集群配置，地址可以多个以逗号隔开等。
	 -->
	<!-- 用dubbo协议在20880端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="${dubbo.protocol.member.port}" />

	<!-- 具体的实现bean -->
	<bean id="memberService" class="me.loveshare.member.service.impl.MemberServiceImpl" />

	<!-- 声明需要暴露的服务接口 -->
	<dubbo:service interface="me.loveshare.member.service.MemberService" ref="memberService" timeout="${dubbo.member.timeout}" version="${dubbo.member.version}" />
	<!--
		dubbo:service标签的一些属性说明：
	     1）interface服务接口的路径
	     2）ref引用对应的实现类的Bean的ID
	     3）registry向指定注册中心注册，在多个注册中心时使用，值为<dubbo:registry>的id属性，多个注册中心ID用逗号分隔，如果不想将该服务注册到任何registry，可将值设为N/A
	     4）register 默认true ，该协议的服务是否注册到注册中心。
	 -->

	 <!-- redis服务  服务间调用 -->
 	<!--<dubbo:reference id="stringRedisService" group="stringRedisService" interface="me.loveshare.redis.service.StringRedisService" version="${dubbo.redis.version}"  />-->
	<!-- <dubbo:reference id="objectRedisService" interface="me.loveshare.redis.service.ObjectRedisService" url="${service.module.redis.url}" /> -->
	<!-- <dubbo:reference id="sessionCacheRedisService" interface="me.loveshare.redis.service.SessionCacheRedisService" url="dubbo://192.168.1.119:20881" /> -->

	<!-- 或 -->
	<!-- 扫描注解包路径，多个包用逗号分隔，不写pacakge表示扫描当前applicationContext中所有的类 -->
	<!-- http://www.360doc.com/content/15/0327/21/10675863_458574100.shtml -->
	<!-- <dubbo:annotationpackage="me.loveshare.member.service"/> -->
	<!-- 或//但spring声明式事务冲突 -->
	<!-- <dubbo:annotation />
	<context:component-scan base-package="me.loveshare.member.service">
		<context:include-filter type="annotation" expression="com.alibaba.dubbo.config.annotation.Service" />
	</context:component-scan> -->

</beans>